<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kevin Jalbert</title>
  <link href="https://kevinjalbert.com"/>
  <updated>2023-04-29T20:00:00-04:00</updated>
  <author>
    <name>Kevin Jalbert</name>
  </author>
  <id>https://kevinjalbert.com</id>
  <entry>
    <title>Using Excalidraw's Embedded Scene Feature for Collaborative Diagramming</title>
    <link rel="alternate" href="https://kevinjalbert.com/using-excalidraws-embedded-scene-feature-for-collaborative-diagramming/"/>
    <id>https://kevinjalbert.com/using-excalidraws-embedded-scene-feature-for-collaborative-diagramming/</id>
    <updated>2023-04-30T20:59:38-04:00</updated>
    <published>2023-04-29T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Learn about Excalidraw's embedded scene feature, which allows you to save diagrams as PNG or SVG files while retaining the ability to modify them within Excalidraw. In this post, we'll explore how the embedded scene feature works, its benefits, and some potential gotchas to watch out for.</description>
    <content type="html">&lt;p&gt;As a software developer, creating and modifying diagrams is an essential part of the job. &lt;a href="https://excalidraw.com/"&gt;Excalidraw&lt;/a&gt; is a diagramming tool that offers flexibility, speed, and collaborative features for both personal and work scenarios.&lt;/p&gt;

&lt;p&gt;But what sets Excalidraw apart is its &lt;a href="https://twitter.com/excalidraw/status/1316001446043750400"&gt;embedded scene feature&lt;/a&gt;, which started out as an &lt;a href="https://github.com/excalidraw/excalidraw/issues/414"&gt;idea captured in a GitHub Issue&lt;/a&gt;. This feature allows diagrams to be saved as artifacts like PNG or SVG files while retaining the ability to modify them within Excalidraw. When exporting a PNG or SVG, the Excalidraw scene data is embedded inside the file artifact. This means that you can open the file in Excalidraw and continue modifying the diagram.&lt;/p&gt;

&lt;h2&gt;Benefits of Embedded Scene&lt;/h2&gt;

&lt;p&gt;The embedded scene feature simplifies the process of modifying diagrams by eliminating the need for separate image and JSON data files. This is particularly useful in collaborative settings, as the file can be under version control. The file can be easily committed to a Git repository and viewed in rendered documentation sites.&lt;/p&gt;

&lt;p&gt;Another added bonus is the availability of the &lt;a href="https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor"&gt;Excalidraw extension for VS Code&lt;/a&gt;. This enables modification of the file within the IDE editor, allowing for easy in-place changes to architecture and flow diagrams.&lt;/p&gt;

&lt;h2&gt;Potential Challenges&lt;/h2&gt;

&lt;p&gt;There are a few challenges to keep in mind when working with the embedded scene feature. If the file with the embedded scene data is compressed or minified, the scene data is lost. This means that files committed to a repository should not be compressed or minified so they can continue to be editable.&lt;/p&gt;

&lt;h2&gt;Comparison to Other Diagramming Tools&lt;/h2&gt;

&lt;p&gt;Excalidraw offers a simpler and more straightforward approach to diagramming when compared to other tools like &lt;a href="https://mermaid.js.org/"&gt;Mermaid&lt;/a&gt; or markup-related tools (in my opinion). While tools like &lt;a href="https://miro.com/"&gt;Miro&lt;/a&gt; or &lt;a href="https://www.figma.com/"&gt;Figma&lt;/a&gt; offer powerful collaboration features, they don&amp;rsquo;t integrate well into a repository setting. Excalidraw&amp;rsquo;s embedded scene feature keeps diagrams close to the code, simplifying the modification process.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Excalidraw&amp;rsquo;s embedded scene feature streamlines the creation and modification of diagrams. Its simplicity and integration with repositories make it a great tool for software developers. While there are potential challenges to consider, the benefits of the embedded scene feature outweigh them. Whether working solo or in a team, Excalidraw can make diagramming more enjoyable and efficient.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Sharing Plex with Common Media Sense age-restrictions</title>
    <link rel="alternate" href="https://kevinjalbert.com/sharing-plex-with-common-media-sense-age-restrictions/"/>
    <id>https://kevinjalbert.com/sharing-plex-with-common-media-sense-age-restrictions/</id>
    <updated>2023-04-07T15:06:27-04:00</updated>
    <published>2023-03-26T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read how I've organized and shared my Plex media library for my kids. I've restricted the library to age-appropriate content using Common Sense Media and labels. The process is automated with the flexibility for manual overrides.</description>
    <content type="html">&lt;p&gt;I have a &lt;a href="https://www.plex.tv/"&gt;Plex&lt;/a&gt; server which houses media for our household. With kids, I want to ensure that they don&amp;rsquo;t have access to age-inappropriate movies and shows. I&amp;rsquo;ve taken a rather automated approach that leverages &lt;a href="https://metamanager.wiki/"&gt;Plex Meta Manager&lt;/a&gt;, but still provides the flexibility for manual override as needed.&lt;/p&gt;

&lt;h2&gt;Common Media Sense Age Rating&lt;/h2&gt;

&lt;p&gt;The complexity around the (different) &lt;a href="https://en.wikipedia.org/wiki/Motion_picture_content_rating_system"&gt;Motion Picture Content Rating Systems&lt;/a&gt; is fairly evident. Even with a selected system (i.e., &lt;a href="https://en.wikipedia.org/wiki/Canadian_motion_picture_rating_system"&gt;Canada&amp;rsquo;s&lt;/a&gt;) the ratings are still ambiguous on what might be appropriate for a certain age.&lt;/p&gt;

&lt;p&gt;I decided to leverage the &lt;a href="https://www.commonsensemedia.org/"&gt;Common Sense Media&lt;/a&gt; age rating for Movies, TV Shows, and Anime. This provides a more succinct age rating. To note, age appropriateness of media varies based on the child, so it doesn&amp;rsquo;t hurt to double-check and manually override as needed.&lt;/p&gt;

&lt;h2&gt;Automated Age Ratings using Plex Meta Manager&lt;/h2&gt;

&lt;p&gt;I use Plex Meta Manager to do the following tasks on a daily schedule:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add the Common Sense Media age rating on each item in the Library using the &lt;a href="https://metamanager.wiki/en/latest/config/operations.html#mass-content-rating-update"&gt;Mass Content Rating Update operation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Add an overlay (on the poster art) with the Common Sense Media age rating for each item in the Library using the &lt;a href="https://metamanager.wiki/en/latest/defaults/overlays/commonsense.html#commonsense-age-rating-overlay"&gt;CommonSense Age Rating Overlay&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following is a slimmed-down snippet of my &lt;code&gt;config.yml&lt;/code&gt; that adds the Common Sense Media age rating and displays it on the poster art. As you&amp;rsquo;ll see in the example image, there are a lot of other Plex Meta Manager configurations in place to display ratings.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;libraries&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;Shows&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;library_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;‚≠ê Shows&lt;/span&gt;
    &lt;span class="na"&gt;overlay_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;pmm&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;commonsense&lt;/span&gt;
    &lt;span class="na"&gt;operations&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;mass_content_rating_update&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mdb_commonsense&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Example overlay rating" width="2184" height="936" src="/images/2023-03-27-sharing-plex-with-common-media-sense-age-restrictions/example-overlay-rating.jpeg" /&gt;&lt;/p&gt;

&lt;p&gt;In some cases, there might not be a Common Sense Media age rating available. When this scenario occurs, I just look around and make the best-educated guess (or I just be overly cautious), and set it manually in Plex.&lt;/p&gt;

&lt;h2&gt;Manual Override using Labels&lt;/h2&gt;

&lt;p&gt;If needed, you can add a special &lt;em&gt;Sharing -&amp;gt; Labels&lt;/em&gt; on a media item to either include or exclude it from the Kid&amp;rsquo;s account, regardless of the Common Sense Media age rating. The labels that I&amp;rsquo;ve chosen are &lt;code&gt;Override:Kids&lt;/code&gt; for including, and &lt;code&gt;Override:Adult&lt;/code&gt; for excluding.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Override labels" width="1428" height="566" src="/images/2023-03-27-sharing-plex-with-common-media-sense-age-restrictions/override-labels.png" /&gt;&lt;/p&gt;

&lt;h2&gt;Profile Restriction&lt;/h2&gt;

&lt;p&gt;The final piece of the puzzle is putting the actual restrictions on the Kid&amp;rsquo;s account in Plex. As we can see in this setup, the account will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Allow any media that has a Common Sense Media age of 1-7&lt;/li&gt;
&lt;li&gt;Allow any media that has the manual &lt;em&gt;Sharing -&amp;gt; Label&lt;/em&gt; of &lt;code&gt;Override:Kids&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Disallow any media that has the manual &lt;em&gt;Sharing -&amp;gt; Label&lt;/em&gt; of &lt;code&gt;Override:Adults&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt="Kids restrictions" width="1750" height="1114" src="/images/2023-03-27-sharing-plex-with-common-media-sense-age-restrictions/kids-restrictions.png" /&gt;&lt;/p&gt;

&lt;p&gt;I can add new age ranges as my kids grow up, and I can even introduce individualized profiles as required. I like having the flexibility to manually override age ratings for those times when we&amp;rsquo;ve watched the content as a family.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Making AirPlay work with Chromecast Devices</title>
    <link rel="alternate" href="https://kevinjalbert.com/making-airplay-work-with-chromecast-devices/"/>
    <id>https://kevinjalbert.com/making-airplay-work-with-chromecast-devices/</id>
    <updated>2023-04-07T15:06:27-04:00</updated>
    <published>2023-02-26T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read about how I got my Chromecast devices (i.e., Google Nest Minis) to work with AirPlay and play audio streams.</description>
    <content type="html">&lt;p&gt;This is another quick post in which I want to share and praise a new tool/service I&amp;rsquo;ve been using.&lt;/p&gt;

&lt;p&gt;Continuing from my &lt;a href="/getting-non-homekit-devices-working-in-homekit"&gt;previous efforts to get non-apple devices to work with Homekit&lt;/a&gt;, I decided to make my Google Nest/Home speakers work with AirPlay.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m leveraging the open-source project &lt;a href="https://github.com/philippe44/AirConnect"&gt;philippe44/AirConnect&lt;/a&gt; to accomplish this feat. The README file is filled with information that I highly recommend at least skimming. The quick TL;DR on what this does, straight out of the README, is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;AirConnect can run on any machine that has access to your local network.&lt;/p&gt;

&lt;p&gt;It does not need to be on your main computer.&lt;/p&gt;

&lt;p&gt;It will detect UPnP/Sonos/Chromecast players, create as many virtual AirPlay devices as needed, and act as a bridge/proxy between AirPlay clients (iPhone, iPad, iTunes, MacOS, AirFoil &amp;hellip;) and the real UPnP/Sonos/Chromecast players.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I run AirConnect from my &lt;a href="https://unraid.net/"&gt;Unraid server&lt;/a&gt; (using this docker container &lt;a href="https://github.com/1activegeek/docker-airconnect"&gt;&lt;code&gt;1activegeek/docker-airconnect&lt;/code&gt;&lt;/a&gt;) and it was pretty much a &lt;em&gt;painless&lt;/em&gt; addition for me. I was quickly able to see new devices appear as compatible AirPlay devices.&lt;/p&gt;

&lt;p&gt;There is a &lt;a href="https://github.com/philippe44/AirConnect#delay-when-switching-track-or-source"&gt;known limitation with AirConnect&lt;/a&gt;, which is that there are a few seconds of delay when switching tracks. Overall, it doesn&amp;rsquo;t bother me too much but it is worth knowing about.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Sync Twitter Following to a List</title>
    <link rel="alternate" href="https://kevinjalbert.com/sync-twitter-following-to-a-list/"/>
    <id>https://kevinjalbert.com/sync-twitter-following-to-a-list/</id>
    <updated>2023-04-07T15:06:27-04:00</updated>
    <published>2023-01-30T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Check out how I automatically maintain a Twitter list of all my following so that I can get daily summaries in Readwise Reader.</description>
    <content type="html">&lt;p&gt;I mostly use Twitter as a source of information (to some degree), but I don&amp;rsquo;t want to be &lt;em&gt;checking&lt;/em&gt; Twitter all the time. I usually batch my consumption while keeping track of the timeline position (via the app I use). I don&amp;rsquo;t produce content on Twitter (I just never really got into that aspect of it).&lt;/p&gt;

&lt;p&gt;I was using Tweetbot and out of nowhere it just stopped working&amp;hellip; &lt;a href="https://tapbots.com/tweetbot/"&gt;Turns out Twitter suspended access to 3rd party clients &amp;ndash; which killed Tweetbot (and many other clients)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This become the forcing function to try &lt;a href="https://readwise.io/read"&gt;Readwise‚Äôs Reader&lt;/a&gt; as my primary way to consume Twitter.&lt;/p&gt;

&lt;h2&gt;Readwise Reader&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve recently adopted Reader to help facilitate my consumption of information. It&amp;rsquo;s really a delightful &lt;em&gt;all-in-one&lt;/em&gt; application that allows me to collect/filter/consume/highlight content. Reader highlights are instantly sync to &lt;a href="https://readwise.io/i/kevin862"&gt;Readwise (referral link)&lt;/a&gt; at no cost as it is bundled into the tool.&lt;/p&gt;

&lt;p&gt;With the change in Twitter, I decided to embrace Reader&amp;rsquo;s ability to provide daily summaries of tweets from a &lt;a href="https://help.twitter.com/en/using-twitter/twitter-lists"&gt;Twitter List&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Twitter List of Followings&lt;/h2&gt;

&lt;p&gt;Due to how Reader&amp;rsquo;s Twitter daily summaries work, I need a public Twitter List of people I&amp;rsquo;m following. I went about this by throwing together a quick script to do synchronize my following to a list using Twitter&amp;rsquo;s API.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;TwitterApi&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;twitter-api-v2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TARGET_LIST_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;xxxxxxx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MY_USER_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;xxxxxxx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TwitterApi&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;appKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;xxxxxxx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;appSecret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;xxxxxxx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;xxxxxxx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;accessSecret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;xxxxxxx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Fetch all users I follow&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myFollowings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;v2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;following&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MY_USER_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;asPaginator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})).&lt;/span&gt;&lt;span class="nx"&gt;fetchLast&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userIdsFollowing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFollowings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Fetch all users in specified list&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;membersOfList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;v2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listMembers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;TARGET_LIST_ID&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;fetchLast&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userIdsInList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;membersOfList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Get users I follow that are not on the list&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usersToFollow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userIdsFollowing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;userIdsInList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

  &lt;span class="c1"&gt;// Get users in the list that I don't follow anymore&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usersToUnfollow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;userIdsInList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;userIdsFollowing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

  &lt;span class="c1"&gt;// Set the list to private (avoid notifying users of being added/removed)&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;v2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;TARGET_LIST_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;private&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="c1"&gt;// Add new users to list&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;usersToFollow&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Adding &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; to list`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;v2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addListMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;TARGET_LIST_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Remove users from the list I don't follow anymore&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;usersToUnfollow&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Removing &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; to list`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;v2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeListMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;TARGET_LIST_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Set the list back to public&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;v2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;TARGET_LIST_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;private&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nothing too special with the above &amp;ndash; I&amp;rsquo;ve commented the code. The &lt;code&gt;.fetchLast()&lt;/code&gt; should paginate automatically and grab all members (no guarantees what happens if you have a large following count). I also set the list to private before adding/removing users to avoid notifying them of changes.&lt;/p&gt;

&lt;p&gt;When I run this script all users I&amp;rsquo;m following are synced to the list (adding/removing based on differences). I don&amp;rsquo;t have to manage the list at all!&lt;/p&gt;

&lt;h2&gt;Automating the Sync&lt;/h2&gt;

&lt;p&gt;The final step in making this syncing automatic. If following/removing someone on Twitter, it should be reflected on that list without any extra effort on my part.&lt;/p&gt;

&lt;p&gt;I decided to use &lt;a href="https://pipedream.com/"&gt;Pipedream&lt;/a&gt; and scheduled the execution of this script every hour. Pipedream makes this painless, and the free plan is &lt;em&gt;plenty&lt;/em&gt; for me. The great thing is that I don&amp;rsquo;t have to worry about it anymore.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Pipedream workflow" width="1336" height="1414" src="/images/2023-01-31-sync-twitter-following-to-a-list/pipedream-workflow.png" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Turning a Webpage into a Basic iOS App</title>
    <link rel="alternate" href="https://kevinjalbert.com/turning-a-webpage-into-a-basic-ios-app/"/>
    <id>https://kevinjalbert.com/turning-a-webpage-into-a-basic-ios-app/</id>
    <updated>2023-04-07T15:06:27-04:00</updated>
    <published>2022-12-30T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">iOS applications for the most part end up being an entry point based on intent. Sometimes these tasks are isolated to a webpage (in the form of an application) and have no native iOS application. Read how we can turn a webpage into a basic iOS application to reduce friction and improve focus to handle intents.</description>
    <content type="html">&lt;h2&gt;Why Would I Need This?&lt;/h2&gt;

&lt;p&gt;iOS applications are powerful tools when used correctly. They help with accomplishing an intent, &lt;em&gt;&amp;ldquo;I want to do X&amp;rdquo;&lt;/em&gt;. Sometimes a service doesn&amp;rsquo;t have a native iOS application and solely exists as a webpage or web application. This means always needing to open the browser on the device and then navigate to the appropriate tab to access it. You can mitigate this with the &amp;ldquo;Add to Home Screen&amp;rdquo; feature of Safari, but it still isn&amp;rsquo;t ideal (as it still opens in the browser).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m all about efficiency and better user experiences. If we can turn the webpage into a basic iOS application, that&amp;rsquo;s a huge win in my books. The following are some of the benefits of a dedicated app:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Opening the application is one step.&lt;/li&gt;
&lt;li&gt;The application ends up being searchable/openable via search.&lt;/li&gt;
&lt;li&gt;The application doesn&amp;rsquo;t share context with other tabs through the browser, it occupies its own space.&lt;/li&gt;
&lt;li&gt;The application sheds any extra UI that the browser contains. It has the feel of a native application, occupying the full screen.&lt;/li&gt;
&lt;li&gt;By avoiding the browser the focus is kept on the application and prevents distractions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;How to Accomplish This?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ll keep this part short as I didn&amp;rsquo;t pioneer this and mainly want to share the solution I found. This &lt;a href="https://ios.gadgethacks.com/how-to/turn-any-website-into-full-screen-app-your-iphone-0384426/"&gt;article (&amp;ldquo;Turn Any Website into a Full-Screen App on Your iPhone&amp;rdquo;) from GadgetHacks&lt;/a&gt;, explains the process in depth.&lt;/p&gt;

&lt;p&gt;The TL;DR point is to use this &lt;a href="https://www.icloud.com/shortcuts/d18b423ea42d47fbb82a03d07156c747"&gt;iOS Shortcut (&amp;ldquo;Make app from url&amp;rdquo;)&lt;/a&gt;. There might be other ways to accomplish this, but I found this way works quite well.&lt;/p&gt;

&lt;p&gt;Following the above allows you to create basic iOS applications for any webpage or web application. I am particularly fond of using it for &lt;a href="https://chat.openai.com/chat"&gt;ChatGPT&lt;/a&gt; right now.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Getting Non-HomeKit Devices Working in HomeKit</title>
    <link rel="alternate" href="https://kevinjalbert.com/getting-non-homekit-devices-working-in-homekit/"/>
    <id>https://kevinjalbert.com/getting-non-homekit-devices-working-in-homekit/</id>
    <updated>2023-04-07T15:06:27-04:00</updated>
    <published>2022-11-29T19:00:00-05:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read about how I got my non-HomeKit devices working in HomeKit using Homebridge. This makes it easy to use Siri (via an Apple Watch) to control my smart devices.</description>
    <content type="html">&lt;h2&gt;Google Home as my Hub&lt;/h2&gt;

&lt;p&gt;All my smart home devices end up connecting via &lt;a href="https://home.google.com/welcome/"&gt;Google Home&lt;/a&gt;. It was an easy entry point at the time via the inexpensive Google Home devices, and it turned out that voice activation was the &lt;em&gt;key&lt;/em&gt; to usability.&lt;/p&gt;

&lt;p&gt;Even being an Apple household, we never got into &lt;a href="https://www.apple.com/ca/home-app/accessories/"&gt;HomeKit&lt;/a&gt;. I figured that switching to HomePods was a bit too costly&amp;hellip; and also some of my smart devices didn&amp;rsquo;t connect to HomeKit.&lt;/p&gt;

&lt;h2&gt;Apple Watch and HomeKit&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve recently connected a smart switch for the lamp in my youngest son&amp;rsquo;s room. When my wife puts him down she&amp;rsquo;ll be laying with him, and wants an easy way to turn his lamp off (as it is across the room), I know&amp;hellip; first-world problems. If she has her phone she can use that, but often she just has her Apple Watch.&lt;/p&gt;

&lt;p&gt;I looked around, and it seemed to like controlling devices via HomeKit would be an ideal solution, and &lt;a href="https://support.apple.com/en-ca/guide/watch/apddad023a05/watchos"&gt;with WatchOS it is possible&lt;/a&gt;. Now to connect my non-HomeKit devices somehow&amp;hellip;&lt;/p&gt;

&lt;h1&gt;Exploring Homebridge&lt;/h1&gt;

&lt;p&gt;A quick investigation led me to &lt;a href="https://homebridge.io/"&gt;Homebridge&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With my &lt;em&gt;recently new&lt;/em&gt; &lt;a href="https://unraid.net/"&gt;Unraid server&lt;/a&gt;, I was able to spin up a &lt;a href="https://github.com/oznu/docker-homebridge"&gt;Homebridge Docker container&lt;/a&gt; and had the majority of my devices working quickly!&lt;/p&gt;

&lt;h2&gt;Tweaks and Cameras&lt;/h2&gt;

&lt;p&gt;Homebridge lets you install plugins to then act as the bridge between said devices and HomeKit.&lt;/p&gt;

&lt;p&gt;As of now, I&amp;rsquo;m currently using the following plugins:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/plasticrake/homebridge-tplink-smarthome"&gt;Homebridge TPLink Smarthome&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;My &lt;a href="https://www.kasasmart.com"&gt;Kasa&lt;/a&gt; outlets/switches/lights.&lt;/li&gt;
&lt;li&gt;Worked out of the box and just auto-discovered existing devices on the network.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dkerr64/homebridge-yolink"&gt;Homebridge YoLink&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;My &lt;a href="https://shop.yosmart.com/"&gt;YoLink&lt;/a&gt; door/water/motion sensors.&lt;/li&gt;
&lt;li&gt;Worked out of the box after inputting the required credentials.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Brandawg93/homebridge-nest-cam"&gt;Homebridge Nest Cam&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;My &lt;a href="https://store.google.com/ca/product/nest_doorbell"&gt;Nest Hello Doorbell&lt;/a&gt; (older model)

&lt;ul&gt;
&lt;li&gt;After getting past the authentication (as I haven&amp;rsquo;t migrated my Nest account to Google) this worked. The one &lt;em&gt;addition&lt;/em&gt; I did in the &lt;code&gt;config.json&lt;/code&gt; was specifying &lt;code&gt;&amp;quot;ffmpegCodec&amp;quot;: &amp;quot;copy&amp;quot;&lt;/code&gt; to avoid encoding the stream on my server (fewer resources).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Sunoo/homebridge-camera-ffmpeg"&gt;Homebridge Camera FFmpeg&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;My &lt;a href="https://www.wyze.com/"&gt;Wyze Cameras&lt;/a&gt; to keep an eye on the kids at night&lt;/li&gt;
&lt;li&gt;This one was a bit more involved&amp;hellip;

&lt;ul&gt;
&lt;li&gt;I used &lt;a href="https://github.com/mrlt8/docker-wyze-bridge"&gt;&lt;code&gt;docker-wyze-bridge&lt;/code&gt;&lt;/a&gt; to first expose an RTSP (Real Time Streaming Protocol) stream for the Wyze cameras.&lt;/li&gt;
&lt;li&gt;I then was able to specify the RTSP and Snapshot URLs in the &lt;code&gt;homebridge-camera-ffmpeg&lt;/code&gt; settings.&lt;/li&gt;
&lt;li&gt;The last thing was to specify &lt;code&gt;copy&lt;/code&gt; under &lt;code&gt;Advanced &amp;gt; Video Codec&lt;/code&gt;, again to avoid encoding.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;The Aftermath&lt;/h1&gt;

&lt;p&gt;After all was said and done, everything works as expected. We&amp;rsquo;re able to use our non-HomeKit devices in HomeKit and leverage it on our Apple Devices.&lt;/p&gt;

&lt;h2&gt;Benefits&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Smart devices are exposed in HomeKit.&lt;/li&gt;
&lt;li&gt;Better iOS/WatchOS/macOS integration due to &lt;code&gt;Home&lt;/code&gt; app.&lt;/li&gt;
&lt;li&gt;Siri&amp;rsquo;s capabilities are so nice given I use an iPhone and Apple Watch.&lt;/li&gt;
&lt;li&gt;The Google Home application continues to function as a Hub.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Frustrations&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Smart device names when changed on the source application don&amp;rsquo;t reflect in HomeKit.&lt;/li&gt;
&lt;li&gt;If the Homebridge service has an issue then nothing works via HomeKit.&lt;/li&gt;
&lt;li&gt;Another place to put automations (granted options are nice, but having automations spread across different systems is harder to keep track of.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;I did stumble across &lt;a href="https://www.home-assistant.io/"&gt;Home Assistant&lt;/a&gt;, which looks like an even more powerful automation system. This might be something I poke around with, as there is also a &lt;a href="https://www.home-assistant.io/integrations/homekit/"&gt;HomeKit Integration&lt;/a&gt; for this (amongst many others). One thing at a time though, too much change can be hard to cope with.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>iOS Shortcuts: Actionable Notifications</title>
    <link rel="alternate" href="https://kevinjalbert.com/ios-shortcuts-actionable-notifications/"/>
    <id>https://kevinjalbert.com/ios-shortcuts-actionable-notifications/</id>
    <updated>2023-04-07T15:06:27-04:00</updated>
    <published>2022-10-30T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Sometimes, you need a notification to do something when you tap on it like opening an app or running a shortcut. Unfortunately, the native 'Show Notification' in iOS Shortcuts is non-actionable and therefore lacking. Read about how to take advantage of actionable notifications in iOS Shortcuts.</description>
    <content type="html">&lt;h1&gt;Simple Notifications&lt;/h1&gt;

&lt;p&gt;The native &lt;em&gt;&amp;lsquo;Show Notification&amp;rsquo;&lt;/em&gt; in &lt;a href="https://support.apple.com/en-ca/guide/shortcuts/welcome/ios"&gt;iOS Shortcuts&lt;/a&gt; produces a non-actionable notification. It doesn&amp;rsquo;t allow for any customization to &lt;em&gt;open&lt;/em&gt; anything, so it is purely a notification to show you information.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Native notification" width="828" height="478" src="/images/2022-10-31-ios-shortcuts-actionable-notifications/native-notification.jpeg" /&gt;&lt;/p&gt;

&lt;p&gt;There might be times when you need more customization and power with your notifications. This is where we can take advantage of third-party actions from different Apps.&lt;/p&gt;

&lt;h1&gt;Powerful Notifications&lt;/h1&gt;

&lt;p&gt;On the left, we have &lt;a href="https://www.pushcut.io/"&gt;Pushcut&lt;/a&gt;, a free option that lets you customize three actionable notifications from within their application before you have to pay for a monthly subscription (or a hefty one-time cost &amp;ndash; $55 USD). On the right, we have &lt;a href="https://toolboxpro.app/"&gt;Toolbox Pro&lt;/a&gt; which has their &amp;#39;Show Notification&amp;rsquo; action locked behind a $6 USD one-time in-app purchase.&lt;/p&gt;

&lt;div style="display: flex"&gt;
  &lt;img src="/images/2022-10-31-ios-shortcuts-actionable-notifications/pushcut-notification.jpeg" style="width: 49%; height: 49%"/&gt;
  &lt;img src="/images/2022-10-31-ios-shortcuts-actionable-notifications/toolboxpro-notification.jpeg" style="width: 49%; height: 49%"/&gt;
&lt;/div&gt;

&lt;p&gt;I personally have used Toolbox Pro a lot in the past in my shortcuts. I&amp;rsquo;ve recently stumbled upon Pushcut and seem like a good option as well (especially if you have any usage of their other triggers/server features).&lt;/p&gt;

&lt;p&gt;To note, these aren&amp;rsquo;t the only two applications that allow for these powerful notifications. If you look around I&amp;rsquo;m sure there are many others that might better suit your needs.&lt;/p&gt;

&lt;h1&gt;Actionable Notifications&lt;/h1&gt;

&lt;p&gt;The beauty of actionable notifications is that they can open URLs. URLs then let you take advantage of URL Schemes. I&amp;rsquo;m going to pull some quotes from a &lt;a href="/using-url-scheme-links-in-notion"&gt;previous article&lt;/a&gt; I wrote that describes them:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;URL Scheme links&lt;/em&gt; (also called &lt;a href="https://support.apple.com/en-ca/guide/shortcuts/apdcd7f20a6f/ios"&gt;&lt;em&gt;x-callback-url&lt;/em&gt;&lt;/a&gt;), which are defined by an application. For example, Things has an &lt;a href="https://culturedcode.com/things/support/articles/2803573/"&gt;excellent article&lt;/a&gt; on how you can use URL Scheme links to interface with it.&lt;/p&gt;

&lt;p&gt;Each application provides its own URL Scheme, although this &lt;a href="http://x-callback-url.com/apps/"&gt;site&lt;/a&gt; does a decent job cataloging URL Schemes of popular applications.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This makes it so you can &lt;em&gt;tap&lt;/em&gt; on a notification and have it &lt;em&gt;open&lt;/em&gt; an application. An example of this can be seen below, where I go from a notification to the &lt;a href="https://www.openplanetsoftware.com/just-press-record/"&gt;Just Press Record&lt;/a&gt; application:&lt;/p&gt;

&lt;p&gt;&lt;img alt="Actionable notification" width="320" height="693" src="/images/2022-10-31-ios-shortcuts-actionable-notifications/actionable-notification.gif" /&gt;&lt;/p&gt;

&lt;p&gt;To go even further, you can have the URL Scheme trigger other iOS Shortcuts using &lt;code&gt;shortcuts://run-shortcut?name=shortcutname&lt;/code&gt;!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Quantified Self: Measure What you Want to Manage</title>
    <link rel="alternate" href="https://kevinjalbert.com/quantified-self-measure-what-you-want-to-manage/"/>
    <id>https://kevinjalbert.com/quantified-self-measure-what-you-want-to-manage/</id>
    <updated>2023-04-07T15:06:27-04:00</updated>
    <published>2022-09-29T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">Read about my journey in manual/passive data collection (in the manner of Quantified Self), and why I'm stopping measuring some things. Be intentional and measure what you want to be managed, the act of measuring isn't always free.</description>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;What gets measured gets managed&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ndash; Typically associated with Peter Drucker, &lt;a href="https://medium.com/centre-for-public-impact/what-gets-measured-gets-managed-its-wrong-and-drucker-never-said-it-fe95886d3df6"&gt;although seems like V.F. Ridgway&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;Tracking Things&lt;/h1&gt;

&lt;p&gt;I like measuring things and keeping track of data points. In a way, you could say I resonated with the &lt;a href="https://en.wikipedia.org/wiki/Quantified_self"&gt;Quantified self&lt;/a&gt; movement.&lt;/p&gt;

&lt;p&gt;I really jumped into it when I received my own laptop at University and discovered &lt;a href="https://whatpulse.org/"&gt;WhatPulse&lt;/a&gt;, an application to track keyboard/mouse usage. Growing up I played a lot of video games where character progression is always about making numbers go up. With that in mind, it&amp;rsquo;s easy to see why I would gravitate towards something like WhatPulse.&lt;/p&gt;

&lt;h1&gt;So Much Data!&lt;/h1&gt;

&lt;p&gt;Over the years I added more things that I decided to &lt;em&gt;tracked&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Productivity on the Computer via &lt;a href="https://www.rescuetime.com/ref/31263"&gt;RescueTime (Referral Link)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Steps, Heart Rate, Sleep, etc.. via a &lt;a href="https://www.fitbit.com"&gt;Fitbit&lt;/a&gt; then eventually &lt;a href="https://www.apple.com/watch/"&gt;Apple Watch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fluid intake via &lt;a href="https://waterminder.com/"&gt;WaterMinder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Food intake via &lt;a href="https://www.loseit.com/"&gt;Lose It!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GPS location via &lt;a href="https://www.bigpaua.com/arcapp/"&gt;Arc&lt;/a&gt; (iOS only)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;So even with all this data, what do I do with it? Well, not much&amp;hellip;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To further illustrate this, I&amp;rsquo;ll break down what I track, the reason I started, and its usage right now.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fluid Data

&lt;ul&gt;
&lt;li&gt;Reason: Wanted to know if I was drinking enough.&lt;/li&gt;
&lt;li&gt;Usage: My average has been pretty steady for the last year. I pretty much always have the same drinks each day as I work from home.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Food Data

&lt;ul&gt;
&lt;li&gt;Reason: Wanted to know my calorie and weight and how they change&lt;/li&gt;
&lt;li&gt;Usage: I&amp;rsquo;ve basically been the same weight (plus/minus 10 pounds) for all my adult life.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;GPS Data

&lt;ul&gt;
&lt;li&gt;Reason: The app seemed super cool! I could keep track of where I&amp;rsquo;ve been.&lt;/li&gt;
&lt;li&gt;Usage: I just keep collecting data, granted with COVID and moving to work from home there is less travel.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Productivity Data

&lt;ul&gt;
&lt;li&gt;Reason: Wanted to improve my productivity when I&amp;rsquo;m on my computer.&lt;/li&gt;
&lt;li&gt;Usage: It &lt;em&gt;nudges&lt;/em&gt; me with reminders on how much time I spend on my computer in various applications/activities. Granted&amp;hellip; I don&amp;rsquo;t think it is helping that much.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Step, Heart Rate, Sleep Data

&lt;ul&gt;
&lt;li&gt;Reason: Good health indicators I wanted to keep track of. It also comes for free with the Apple Watch.&lt;/li&gt;
&lt;li&gt;Usage: I look at these quite often as it&amp;rsquo;s always on my wrist and phone via Apple&amp;rsquo;s ecosystem and their Health data.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As we can see, not a lot of usage coming from the data. Most things are consistent, habitual, not a problem, or not providing any tangible value.&lt;/p&gt;

&lt;h1&gt;Existential Crisis&lt;/h1&gt;

&lt;p&gt;There have been a few moments that made me question &lt;strong&gt;&lt;em&gt;&amp;ldquo;why am I doing this?&amp;rdquo;&lt;/em&gt;&lt;/strong&gt;, and ultimately should I stop tracking something? Moments like data loss (i.e., I had lost several years of GPS data by accident), or moving to different platforms (Fitbit to Apple Watch). It&amp;rsquo;s been hard to stop collecting as I see it as a data trove in a hoarding sense.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve recently come to terms that the act of &lt;em&gt;measuring&lt;/em&gt; is in a way causing me some anxiety and inconvenience. The following are just two examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I must ensure Arc is running to capture GPS data points before leaving the house.&lt;/li&gt;
&lt;li&gt;I keep mental notes at times to backfill foods/drinks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ultimately, it boils down to the mental burden of tracking and ensuring things are being captured correctly.&lt;/p&gt;

&lt;p&gt;Not everything is free in measuring data. Either you are paying for a service/storage/tools, the time, the cognitive burden (with manual tracking), or even resources on a device (i.e., running the GPS on a phone).&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;final straw which broke the camel&amp;rsquo;s back&lt;/em&gt; is that Arc no longer has a free tier, and is now a subscription (or a hefty lifetime purchase).&lt;/p&gt;

&lt;p&gt;So&amp;hellip; this goes back to &lt;em&gt;&amp;ldquo;Why am I doing this?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;The Power of Correlations and Trends&lt;/h2&gt;

&lt;p&gt;The counter-argument to keep tracking is to identify correlations and deviations in the data. This is the goal of the Quantified Self, and I would say the ultimate benefit; to identify when things might be slipping and need a course correction.&lt;/p&gt;

&lt;p&gt;Being able to synthesize all the data and pull out trends and correlations (like &lt;a href="https://exist.io/"&gt;Exist&lt;/a&gt; does &amp;ndash; but costs a subscription) looks powerful. But I&amp;rsquo;ll be honest, I never gave understanding correlations a solid shot. I was always thinking of trying to build my own tool (but yeah&amp;hellip; that never happened).&lt;/p&gt;

&lt;p&gt;The critical measurements around health are &lt;em&gt;pretty&lt;/em&gt; easy to identify though as you can typically &lt;em&gt;see/feel&lt;/em&gt; the changes (even if they are happening slowly).&lt;/p&gt;

&lt;p&gt;As it stands, where I am in my life right now, the extra effort in measuring, curating, and consuming &lt;em&gt;all&lt;/em&gt; the data is not worth the small short- or medium-term gains for me.&lt;/p&gt;

&lt;h1&gt;Moving Forward&lt;/h1&gt;

&lt;p&gt;All in all, this isn&amp;rsquo;t to say I&amp;rsquo;m abandoning all my data collection. I&amp;rsquo;m just going to be more selective, and intentional by thinking about the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Prefer passive measurements with no/low data loss issues.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Measure what I want to manage.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Re-evaluate periodically what I&amp;rsquo;m measuring and ask if it is still useful.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I can now simplify what I collect right now and boil it down to the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Health metrics via Apple Watch&lt;/li&gt;
&lt;li&gt;Computer productivity via ResuceTime&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both of these require no effort on my part as these are &lt;em&gt;always&lt;/em&gt; collected without any manual intervention.&lt;/p&gt;

&lt;p&gt;This means I can free myself of Lose It! (Food), WaterMinder (Fluid), and Arc (GPS). These all took a toll on me for &lt;em&gt;no reason&lt;/em&gt; as I wasn&amp;rsquo;t currently benefiting from their results. I was measuring stuff I didn&amp;rsquo;t really care about or didn&amp;rsquo;t need to care about anymore. Initially, measuring these things played their part, but it is time to move forward.&lt;/p&gt;

&lt;p&gt;If I need to manage something and I can measure it, you can bet I will at least for the short-term.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Git Bisect: Only the Current Branch</title>
    <link rel="alternate" href="https://kevinjalbert.com/git-bisect-only-the-current-branch/"/>
    <id>https://kevinjalbert.com/git-bisect-only-the-current-branch/</id>
    <updated>2023-04-07T15:06:27-04:00</updated>
    <published>2022-08-30T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">When working with branches, often you are focusing on a specific part of the codebase. Sometimes, a commit in a string of commits can cause failures elsewhere. Check out my script on bisecting the current branch and catch the commit that introduced the error.</description>
    <content type="html">&lt;h1&gt;Git Bisect&amp;rsquo;s Usefulness&lt;/h1&gt;

&lt;p&gt;Imagine that at some point you&amp;rsquo;ve discovered that a bug/failure is present and you aren&amp;rsquo;t exactly sure when it was introduced. This is when &lt;code&gt;git bisect&lt;/code&gt; comes into the picture. With a little bit of setup, it helps binary search through changes to uncover the commit that introduced the issue.&lt;/p&gt;

&lt;p&gt;There are a bunch of tips/tricks and usages of git bisect, but I&amp;rsquo;ll leave that to the &lt;a href="https://git-scm.com/docs/git-bisect"&gt;official documentation&lt;/a&gt; and possibly future posts (it is a very useful tool to be familiar with).&lt;/p&gt;

&lt;h1&gt;Working on a Feature Branch&lt;/h1&gt;

&lt;p&gt;I almost always make changes using feature branches (i.e., branching off of &lt;code&gt;main&lt;/code&gt; and eventually merging the branch back into &lt;code&gt;main&lt;/code&gt;). In projects that have large test suites (where you wouldn&amp;rsquo;t want to run the whole thing frequently), I only run the tests of files I&amp;rsquo;m working in. There is a small chance that I might &lt;em&gt;break&lt;/em&gt; something in a part of the codebase that I wasn&amp;rsquo;t running the tests for, but it can happen. I tend to commit often while working, so to figure out what broke, I have to find which commit is responsible for the issue.&lt;/p&gt;

&lt;h2&gt;Manual Way&lt;/h2&gt;

&lt;p&gt;The following is how I would approach this using &lt;code&gt;git bisect&lt;/code&gt;. The general idea is to only bisect the commits that exist on the feature branch.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# While on the feature branch that I've been working on&lt;/span&gt;

&lt;span class="c"&gt;# Start bisect&lt;/span&gt;
git bisect start

&lt;span class="c"&gt;# Find SHA of where the branch diverged from main&lt;/span&gt;

&lt;span class="c"&gt;# Mark that commit as 'good', as everything prior would have been okay&lt;/span&gt;
git bisect good &amp;lt;branching-sha&amp;gt;

&lt;span class="c"&gt;# Mark the current branch's SHA as 'bad' since something is broken now&lt;/span&gt;
git bisect bad HEAD

&lt;span class="c"&gt;# Run the script/test command to bisect and find the error commit&lt;/span&gt;
git bisect run &amp;lt;script/test-command&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When I&amp;rsquo;m done inspecting the identified commit, then I can &lt;code&gt;git bisect reset&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Automated Way&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve made a script that ends up automating the commands and the finding of the SHA. This makes it so I can use a single command and achieve the same results as the manual way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# While on the feature branch that I've been working on&lt;/span&gt;

&lt;span class="c"&gt;# Use bisect-branch passing the target branch I diverged from and the&lt;/span&gt;
&lt;span class="c"&gt;# script/test command to bisect and find the error commit&lt;/span&gt;
git bisect-branch &lt;span class="nt"&gt;-b&lt;/span&gt; main &amp;lt;script/test-command&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When I&amp;rsquo;m done inspecting the identified commit, then I can &lt;code&gt;git bisect reset&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;The git-bisect-branch Script&lt;/h1&gt;

&lt;p&gt;This &lt;a href="https://gist.github.com/kevinjalbert/3f0e7efe6ed0f411b7ae77b88e00a520"&gt;GitHub Gist&lt;/a&gt; will be the canonical reference of the &lt;code&gt;git-branch-bisect&lt;/code&gt; script (and will see updates as needed).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class="k"&gt;while &lt;/span&gt;&lt;span class="nb"&gt;getopts&lt;/span&gt; &lt;span class="s1"&gt;'b:dh'&lt;/span&gt; OPTION&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
  case&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$OPTION&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in
    &lt;/span&gt;b&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;divergent_branch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$OPTARG&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    d&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nv"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
      &lt;span class="p"&gt;;;&lt;/span&gt;
    h&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"This is a script that performs a git-bisect over all commits from the current branch's HEAD to where the branch diverged from the supplied branch."&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"script usage: git-bisect-branch [-b branch] [-d] [-h] run_command"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"example: git-bisect-branch -d -b main ruby test.rb"&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Arguments:"&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;" - Use '-b' to specify the branch from which your current branch has diverged, this should typically be 'main'/'master'."&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;" - Use '-d' to debug internal variables and see the verbose output of git commands."&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;" - Use '-h' to see this message."&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;" - The remainder of the command is interpreted as the run_command, that will be running at each bisect step."&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"If this script is on your PATH, you will be able to use it like 'git bisect-branch'."&lt;/span&gt;
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
      &lt;span class="nb"&gt;exit &lt;/span&gt;1
      &lt;span class="p"&gt;;;&lt;/span&gt;
  &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="k"&gt;done
&lt;/span&gt;&lt;span class="nb"&gt;shift&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;&lt;span class="nv"&gt;$OPTIND&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

&lt;span class="nv"&gt;run_command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$*&lt;/span&gt;
&lt;span class="nv"&gt;current_branch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;git branch &lt;span class="nt"&gt;--show-current&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;current_branch_sha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;git rev-parse HEAD&lt;span class="si"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nt"&gt;-z&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$divergent_branch&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;then
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"No branch argument supplied. Should be the 'main/master' branch name"&lt;/span&gt;
  &lt;span class="nb"&gt;exit
&lt;/span&gt;&lt;span class="k"&gt;fi

if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nt"&gt;-z&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$run_command&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;then
  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"No run_command argument supplied. Should be the command you will use to run tests for each bisect step"&lt;/span&gt;
  &lt;span class="nb"&gt;exit
&lt;/span&gt;&lt;span class="k"&gt;fi

&lt;/span&gt;&lt;span class="nv"&gt;branching_sha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;git merge-base &lt;span class="nv"&gt;$divergent_branch&lt;/span&gt; &lt;span class="nv"&gt;$current_branch&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Starting bisect of commits on '&lt;/span&gt;&lt;span class="nv"&gt;$current_branch&lt;/span&gt;&lt;span class="s2"&gt;' branch (&lt;/span&gt;&lt;span class="nv"&gt;$current_branch_sha&lt;/span&gt;&lt;span class="s2"&gt;) since branching from '&lt;/span&gt;&lt;span class="nv"&gt;$divergent_branch&lt;/span&gt;&lt;span class="s2"&gt;' branch (&lt;/span&gt;&lt;span class="nv"&gt;$branching_sha&lt;/span&gt;&lt;span class="s2"&gt;)"&lt;/span&gt;

print_hline &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;'%.s‚îÄ'&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;seq &lt;/span&gt;1 &lt;span class="si"&gt;$(&lt;/span&gt;tput cols&lt;span class="si"&gt;))&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$debug&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;then

  &lt;/span&gt;print_hline
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"run_command: &lt;/span&gt;&lt;span class="nv"&gt;$run_command&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"current_branch: &lt;/span&gt;&lt;span class="nv"&gt;$current_branch&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"current_branch_sha: &lt;/span&gt;&lt;span class="nv"&gt;$current_branch_sha&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"divergent_branch: &lt;/span&gt;&lt;span class="nv"&gt;$divergent_branch&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"branching_sha: &lt;/span&gt;&lt;span class="nv"&gt;$branching_sha&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  print_hline

  git bisect start
  git bisect good &lt;span class="nv"&gt;$branching_sha&lt;/span&gt;
  git bisect bad &lt;span class="nv"&gt;$current_branch_sha&lt;/span&gt;

  git bisect run &lt;span class="nv"&gt;$run_command&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
  print_hline
&lt;span class="k"&gt;else
  &lt;/span&gt;git bisect start &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /dev/null
  git bisect good &lt;span class="nv"&gt;$branching_sha&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /dev/null
  git bisect bad &lt;span class="nv"&gt;$current_branch_sha&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /dev/null
  git bisect run &lt;span class="nv"&gt;$run_command&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /dev/null
&lt;span class="k"&gt;fi

&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Don't forget to 'git bisect reset'"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Digging through Git History for Removed Text</title>
    <link rel="alternate" href="https://kevinjalbert.com/digging-through-git-history-for-removed-text/"/>
    <id>https://kevinjalbert.com/digging-through-git-history-for-removed-text/</id>
    <updated>2023-04-07T15:06:27-04:00</updated>
    <published>2022-07-30T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">The text you are looking for isn't in the current revision anymore, and so you'll have to dig through the Git history somehow, looking for when it was removed/introduced. Read about how I approached this from a CLI perspective, using a script to simplify these searches for me.</description>
    <content type="html">&lt;h1&gt;Deleted files in Git&lt;/h1&gt;

&lt;p&gt;Git keeps a history of practically &lt;em&gt;everything&lt;/em&gt; for your repository. I cannot state how powerful a tool it is, and has helped me immensely as I try to understand the &lt;em&gt;why&lt;/em&gt; of some code.&lt;/p&gt;

&lt;p&gt;There are times when I&amp;rsquo;ve tried to &lt;em&gt;find&lt;/em&gt; something that doesn&amp;rsquo;t exist in the current revision but was in a previous version. I&amp;rsquo;ve always struggled with this, and I wanted a &lt;em&gt;simpler&lt;/em&gt; and (hopefully) &lt;em&gt;quicker&lt;/em&gt; way to conduct this search.&lt;/p&gt;

&lt;p&gt;I decided to script my way to a solution that I feel happy about for now.&lt;/p&gt;

&lt;h1&gt;Let&amp;rsquo;s go Digging&lt;/h1&gt;

&lt;p&gt;This script ends up doing the following to search through Git history for matching text:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Search for any commits with any &amp;lsquo;additions/removals&amp;rsquo; of the search query.&lt;/li&gt;
&lt;li&gt;For each commit, get the list of files that contain the search query.&lt;/li&gt;
&lt;li&gt;For each file, &lt;code&gt;grep&lt;/code&gt; the &lt;code&gt;git&lt;/code&gt; patch and print the lines that match the search query (with the match highlighted).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A lot of the &lt;code&gt;git&lt;/code&gt; commands are leveraging the &lt;code&gt;--pickaxe-regex -S&amp;lt;query&amp;gt;&lt;/code&gt; flags to search changes with regex powers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-S&amp;lt;string&amp;gt;
  Look for differences that change the number of occurrences of the specified string (i.e. addition/deletion) in a file.

--pickaxe-regex
  Treat the &amp;lt;string&amp;gt; given to -S as an extended POSIX regular expression to match.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would allow for the search query to leverage regular expressions. The following is an example of looking through my &lt;a href="https://github.com/kevinjalbert/dotfiles"&gt;dotfiles repo&lt;/a&gt; for &lt;code&gt;zgen&lt;/code&gt; (which is something I don&amp;rsquo;t use anymore).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚ùØ git dig "\szgen"
Searching for any commits with any 'additions/removals'
  Matching regex: "\szgen"

commit bd5dc58e9f94b7b62013a1378fbe7d101ccc70ec
Author: Kevin Jalbert &amp;lt;kevin.j.jalbert@gmail.com&amp;gt;
Date:   Fri Jan 6 17:42:44 2017 -0500

    Update zsh.rake to install zplug instead of zgen

FILE -&amp;gt; tasks/zsh.rake
-  desc "Install zgen"
-    section "Installing zgen"

# Plus a few more commits
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The git-dig Script&lt;/h2&gt;

&lt;p&gt;This &lt;a href="https://gist.github.com/kevinjalbert/b390e2d22efa1c55a46c52d1f7ff3cde"&gt;GitHub Gist&lt;/a&gt; will be the canonical reference of the &lt;code&gt;git-dig&lt;/code&gt; script (and will see updates as needed).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'optparse'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'open3'&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;files_with_search_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="sb"&gt;`git show --format="" --name-only &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt; -i --pickaxe-regex -S &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;grep_over_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;git_show_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"git show --format='' -p &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; -- '&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;'"&lt;/span&gt;
  &lt;span class="n"&gt;grep_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"grep -i --color=always -E &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;git_show_cmd&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt; | &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;grep_cmd&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;git_pickaxe_search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;git_log_cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"git log --no-merges --format=%h"&lt;/span&gt;
  &lt;span class="n"&gt;git_log_cmd&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;" --after=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;git_log_cmd&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;" --before=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:before&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:before&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;git_log_cmd&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;" -i --pickaxe-regex -S &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

  &lt;span class="no"&gt;Open3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;popen3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;git_log_cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;git_commit_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="sb"&gt;`git show --no-patch &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_root_dir&lt;/span&gt;
  &lt;span class="n"&gt;current_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;pwd&lt;/span&gt;

  &lt;span class="k"&gt;until&lt;/span&gt; &lt;span class="no"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;exist?&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;current_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;".git"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;SEPARATOR&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;parent_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;parent_dir&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;current_dir&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"No .git repo found in path (or parent paths)."&lt;/span&gt;
      &lt;span class="nb"&gt;exit&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;current_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parent_dir&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;current_dir&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# Handle options&lt;/span&gt;
&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="no"&gt;OptionParser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;banner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Usage: git-dig [options] [regex query]"&lt;/span&gt;

  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"--after=DATE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Only searches commits more recent than the specific date."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"--before=DATE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Only searches commits older recent than the specific date."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:before&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"-h"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"--help"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Prints this help"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse!&lt;/span&gt;

&lt;span class="c1"&gt;# Get search query&lt;/span&gt;
&lt;span class="n"&gt;search_query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;search_query&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'""'&lt;/span&gt; &lt;span class="c1"&gt;# empty search as it would just be a pair of quotes&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"You need to pass a search term as input."&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Searching for any commits with any 'additions/removals'"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"  Matching regex: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:before&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"  With search options: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;

&lt;span class="c1"&gt;# Get SHAs of all commits which had some 'addition/removal' of the search term&lt;/span&gt;
&lt;span class="n"&gt;git_pickaxe_search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gets&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;nil?&lt;/span&gt;

    &lt;span class="n"&gt;sha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strip&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;git_commit_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;

    &lt;span class="c1"&gt;# Print diff of files which have search term&lt;/span&gt;
    &lt;span class="n"&gt;files_with_search_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"FILE -&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;grep_over_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;search_query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"-"&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Alternative Solutions&lt;/h1&gt;

&lt;p&gt;To note, most Git GUIs have some search functionality in place which can satisfy the majority of this. Using the Git CLI is still a nice thing to be able to leverage though, which is why I went this route.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Import Raindrop.io Highlights into Readwise</title>
    <link rel="alternate" href="https://kevinjalbert.com/import-raindrop-io-highlights-into-readwise/"/>
    <id>https://kevinjalbert.com/import-raindrop-io-highlights-into-readwise/</id>
    <updated>2023-04-07T15:06:27-04:00</updated>
    <published>2022-06-27T20:00:00-04:00</published>
    <author>
      <name>Kevin Jalbert</name>
    </author>
    <description type="html">I really like how Raindrop.io handles highlights and bookmarking in general. As of the time of writing, there isn't any official solution to import Raindrop.io highlights into Readwise. Check out my script that bridges this gap until an official integration exists.</description>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt; &lt;a href="https://readwise.io/changelog/raindrop-integration"&gt;Readwise now officially supports Raindrop.io!&lt;/a&gt; I wholeheartedly recommend using the official integration over my version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;Raindrop.io&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve recently discovered &lt;a href="https://raindrop.io/"&gt;Raindrop.io&lt;/a&gt; as a bookmarking/highlighting service. It has been refreshing to use as it exudes polish. The browser extension is nice as it indicates if you&amp;rsquo;ve bookmarked the page already, shows you highlights on the page, and allows you to highlight the content of the page. The iOS client is also great and does everything I need. The cherry-on-top is that the &lt;em&gt;free&lt;/em&gt; plan is very capable and has unlimited highlights per article.&lt;/p&gt;

&lt;h1&gt;Readwise&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve been a user of &lt;a href="https://readwise.io/"&gt;Readwise&lt;/a&gt; for over two years at this point. It&amp;rsquo;s an important service for me as it allows me to revisit article&amp;rsquo;s key points that I&amp;rsquo;ve highlighted. Readwise has many integrations to import highlights into it. I&amp;rsquo;ve been using &lt;a href="https://web.hypothes.is/"&gt;Hypothesis&lt;/a&gt; for a while, which has an official Readwise integration.&lt;/p&gt;

&lt;h1&gt;No Official Integration&lt;/h1&gt;

&lt;p&gt;As I moved over to Raindrop.io, it dawned on me that Readwise doesn&amp;rsquo;t yet have any official integration with Raindrop.io. I&amp;rsquo;ve emailed Readwise about this and got the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You&amp;rsquo;re actually one of the first to request an integration with Raindrop.io. I&amp;rsquo;ve noted your request in our system, so as more users request the integration then it&amp;rsquo;ll move up in the queue to develop.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I didn&amp;rsquo;t want to wait around and I noticed that both services have an API&amp;hellip;&lt;/p&gt;

&lt;h1&gt;Import Raindrop.io Highlights into Readwise&lt;/h1&gt;

&lt;p&gt;Looking at both the &lt;a href="https://readwise.io/api_deets"&gt;Readwise API&lt;/a&gt; and &lt;a href="https://developer.raindrop.io/"&gt;Raindrop.io API&lt;/a&gt;, it seemed fairly straight-forward to connect them up.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Iterate highlights in Raindrop&lt;/li&gt;
&lt;li&gt;Import highlights to Readwise&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was noted that Readwise &lt;em&gt;de-dupe highlights by title/author/text/source&lt;/em&gt;url_, so the API was idempotent if I send the same highlights.&lt;/p&gt;

&lt;p&gt;I did hit a couple of snags in building my solution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Highlights didn&amp;rsquo;t have the title or author of the article

&lt;ul&gt;
&lt;li&gt;I used &lt;code&gt;nokogiri&lt;/code&gt; to fetch these from the article&amp;rsquo;s URL&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;How to know when I&amp;rsquo;ve already processed a highlight

&lt;ul&gt;
&lt;li&gt;Highlights were ordered by last created.&lt;/li&gt;
&lt;li&gt;I keep track of the last uploaded highlight&amp;rsquo;s ID from Readwise, this acts as the marker to know when I&amp;rsquo;ve caught up with the last import.&lt;/li&gt;
&lt;li&gt;The marker ID is automatically recorded in the script for future executions.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Waiting for the Future Official Integration&lt;/h1&gt;

&lt;p&gt;My approach works and only requires to be run periodically. I&amp;rsquo;ve been toying around with the idea of just having a &lt;code&gt;cron&lt;/code&gt; run it for me hourly.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t put in annotations from Raindrop.io (as I&amp;rsquo;m using the free plan for now), but it wouldn&amp;rsquo;t be hard to add that.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t bother removing highlights from Readwise when highlights are &lt;em&gt;deleted&lt;/em&gt; on Raindrop.io. I noted that this is the &lt;a href="https://help.readwise.io/article/95-will-deleting-a-highlight-in-readwise-delete-the-original-or-vice-versa"&gt;default behaviour with Readwise according to their FAQ&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;if you delete the highlight in the original source, the highlight will not be deleted in Readwise.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An official integration would be nice, but until then this does the trick.&lt;/p&gt;

&lt;h1&gt;The Import Script&lt;/h1&gt;

&lt;p&gt;The following is the Ruby script for importing Raindrop.io highlights into Readwise. You need to acquire your API tokens for both services and substitute them into the placeholders.&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://gist.github.com/kevinjalbert/1d77add23d9bdaa615a5bd5c05328678"&gt;GitHub Gist&lt;/a&gt; will be the canonical reference of the import script (and will see updates as needed).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"httparty"&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"nokogiri"&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"open-uri"&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"uri"&lt;/span&gt;

&lt;span class="no"&gt;RAINDROP_AUTH_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"&lt;/span&gt;
&lt;span class="no"&gt;READWISE_AUTH_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"&lt;/span&gt;
&lt;span class="no"&gt;LAST_SAVED_HIGHLIGHT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mo"&gt;000000000&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;- Keeps track of import position (Updates automatically)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;title_from_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Nokogiri&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;HTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;at_css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;domain_from_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;host&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^www\./i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;request_raindrop_highlights&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;HTTParty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"https://api.raindrop.io/rest/v1/highlights?page=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;perpage=50"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"Authorization"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Bearer &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;RAINDROP_AUTH_TOKEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"Content-Type"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"application/json"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save_highlight_to_readwise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;HTTParty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"https://readwise.io/api/v2/highlights/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;"Authorization"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"Token &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;READWISE_AUTH_TOKEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s2"&gt;"Content-Type"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"application/json"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="ss"&gt;body: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="ss"&gt;highlights: &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="ss"&gt;text: &lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="n"&gt;title_from_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
          &lt;span class="ss"&gt;author: &lt;/span&gt;&lt;span class="n"&gt;domain_from_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
          &lt;span class="ss"&gt;source_url: &lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="ss"&gt;category: &lt;/span&gt;&lt;span class="s2"&gt;"articles"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;highlighted_at: &lt;/span&gt;&lt;span class="no"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"created"&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nf"&gt;iso8601&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nf"&gt;to_json&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_last_saved_highlight_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;last_highlight_value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Updating last saved highlight value to &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;last_highlight_value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;updated_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/LAST_SAVED_HIGHLIGHT=\d+/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"LAST_SAVED_HIGHLIGHT=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;last_highlight_value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;updated_content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;first_highlight_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Processing Raindrop.io highlights from page &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="n"&gt;raindrop_highlights&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request_raindrop_highlights&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s2"&gt;"items"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;raindrop_highlights&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;empty?&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"No more highlights to process"&lt;/span&gt;
    &lt;span class="n"&gt;update_last_saved_highlight_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first_highlight_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;raindrop_highlights&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"-&amp;gt; Importing highlight into Readwise (&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'link'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'created'&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;', '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)"&lt;/span&gt;

    &lt;span class="n"&gt;saved_highlight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;save_highlight_to_readwise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;highlight&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;

    &lt;span class="n"&gt;saved_highlight_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;saved_highlight&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"modified_highlights"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;
    &lt;span class="n"&gt;first_highlight_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;saved_highlight_id&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;first_highlight_id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;nil?&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;saved_highlight_id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;LAST_SAVED_HIGHLIGHT&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Reached last saved highlight"&lt;/span&gt;
      &lt;span class="n"&gt;update_last_saved_highlight_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first_highlight_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nb"&gt;exit&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
</feed>
